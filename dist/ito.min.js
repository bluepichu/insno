"use strict";var __extends=function(t,e){function o(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)},RecongizerResponse;!function(t){t[t.ACCEPT=0]="ACCEPT",t[t.REJECT=1]="REJECT",t[t.WAIT=2]="WAIT"}(RecongizerResponse||(RecongizerResponse={}));var ACCEPT=RecongizerResponse.ACCEPT,REJECT=RecongizerResponse.REJECT,WAIT=RecongizerResponse.WAIT,GestureGraph=function(){function t(t){this._element=t,this._nodes={},this._clearNode=new GestureNode(this),this._startNode=this._clearNode.then(function(t){return"touchend"===t.type&&0===t.touches.length?ACCEPT:WAIT}),this._currentNode=void 0,this._listeners={},this.state={}}return t.prototype.handleTouch=function(t){this._currentNode.handleTouch(t),t.preventDefault()},t.prototype.start=function(t){var e=void 0;if(e=void 0!==t?this.getNode(t):this._startNode,void 0===e)throw new Error("Ito Error: illegal state");return e},t.prototype.setNodeName=function(t,e){if(e in this._nodes)throw new Error('Ito Error: GestureNode with name "'+e+'" already exists');this._nodes[e]=t},t.prototype.moveToNode=function(t){this._currentNode=this.getNode(t),this._currentNode.enter()},t.prototype.getNode=function(t){if("string"==typeof t){if(t in this._nodes)return this._nodes[t];throw new Error('Ito Error: node with name "'+t+'" not found')}return t},t.prototype.reset=function(){this.moveToNode(this._startNode)},t.prototype.fire=function(t){var e=this;t.forEach(function(t){var o=t[0],r=t[1];o in e._listeners&&e._listeners[o].forEach(function(t){t(r)})})},t.prototype.addEventListener=function(t,e){t in this._listeners||(this._listeners[t]=[]),this._listeners[t].push(e)},t.prototype.listen=function(){if(void 0!==this._currentNode)throw new Error("Ito Error: this instance is already listening");var t=this.handleTouch.bind(this);this._element.addEventListener("touchstart",t),this._element.addEventListener("touchend",t),this._element.addEventListener("touchmove",t),this.reset()},t.prototype.wait=function(){this.moveToNode(this._clearNode)},t}(),GestureNode=function(){function t(t){this._parent=t,this._name=void 0,this._events=[],this._recognizers=[],this._timeout=void 0,this._currentRecognizers=void 0,this._currentTimeout=void 0,this._goto=void 0}return t.prototype.name=function(t){if(void 0!==this._name)throw new Error('Ito Error: GestureNode "'+this._name+'" is already named and cannot be renamed');return this._parent.setNodeName(this,t),this._name=t,this},t.prototype.fire=function(t){return this._events.push(t),this},t.prototype.then=function(e){var o=new t(this._parent);return this._recognizers.push({match:e,next:o}),o},t.prototype.timeout=function(e){var o=new t(this._parent);return this._timeout={time:e,next:o},o},t.prototype.enter=function(){var t=this,e=this._events.map(function(e){if("string"==typeof e)return[e,void 0];var o=e(t._parent.state);return Array.isArray(o)?o:[o,void 0]});return this._parent.fire(e),void 0!==this._goto?void this._parent.moveToNode(this._goto):(this._currentRecognizers=this._recognizers.slice(),void 0!==this._timeout&&(this._currentTimeout=setTimeout(function(){return t.advanceTo(t._timeout.next)},this._timeout.time)),void(0===this._currentRecognizers.length&&void 0===this._timeout&&this.wait()))},t.prototype.handleTouch=function(t){clearTimeout(this._currentTimeout);for(var e=0;e<this._currentRecognizers.length;e++)switch(this._currentRecognizers[e].match(t,this._parent.state)){case ACCEPT:return void this.advanceTo(this._currentRecognizers[e].next);case REJECT:this._currentRecognizers.splice(e,1),e--;break;case WAIT:break;default:throw new Error("Ito Error: invalid return from matcher (not ACCEPT, REJECT, or WAIT)")}0===this._currentRecognizers.length&&this.wait()},t.prototype.wait=function(){clearTimeout(this._currentTimeout),this._parent.wait()},t.prototype.advanceTo=function(t){clearTimeout(this._currentTimeout),this._currentRecognizers=void 0,this._currentTimeout=void 0,this._parent.moveToNode(t)},t.prototype["goto"]=function(t){this._goto=t},t}(),Ito=function(t){function e(){t.apply(this,arguments)}return __extends(e,t),e.ACCEPT=ACCEPT,e.REJECT=REJECT,e.WAIT=WAIT,e}(GestureGraph);
//# sourceMappingURL=ito.js.map
